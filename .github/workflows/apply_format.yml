name: Apply format

on:
  issue_comment:
    types: [created, edited]

jobs:
  do-format:
    name: Format Core
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/format'}}
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          lfs: 'true'

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          cache: true
          cache-dependency-path: ci/format/go.sum

      # same as for the ci
      - name: Cache Go executable
        id: cache-format
        uses: actions/cache@v3
        with:
          path: ./ci/format
          # match the os, the main file and its depedencies
          key: ${{ runner.os }}-format-${{ hashFiles('./ci/format/main.go') }}-${{ hashFiles('./ci/format/go.mod') }}

      - if: ${{ steps.cache-format.outputs.cache-hit == 'false' }}
        name: Build Dagger program
        working-directory: ./ci/format
        run: go build -v ./...

      - name: Run Dagger program
        working-directory: ./ci/format
        run: ./format --apply-changes

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated format
          commit_options: '--no-verify --signoff'
          commit_user_name: Format bot
          skip_fetch: true
          skip_checkout: true

      - name: Format done
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: echo "Format done!"
        
      - name: No need to format
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        run: echo "No need to format!"
